
import { FileRequest } from '@/types';
import { normalizeFileRequest } from '@/lib/utils/formatters';

// Basic mock data structure that will be normalized
const baseMockRequests = [
  {
    id: '1',
    requester_id: 'user1',
    requesterName: 'John Doe',
    requesterEmployeeId: 'EMP001',
    requesterCompany: 'Example Corp',
    requesterDepartment: 'Marketing',
    requesterDivision: 'Digital Marketing',
    document_name: 'Q3 Marketing Report',
    requesterEmail: 'john@example.com',
    receiver_email: 'receiver@example.com',
    file_path: 'marketing_report_q3.pdf',
    status: 'pending' as const,
    created_at: '2023-10-15T09:30:00',
    updated_at: '2023-10-15T09:30:00',
  },
  {
    id: '2',
    requester_id: 'user2',
    requesterName: 'Jane Smith',
    requesterEmployeeId: 'EMP002',
    requesterCompany: 'Example Corp',
    requesterDepartment: 'Finance',
    requesterDivision: 'Accounting',
    document_name: 'Annual Financial Statement',
    requesterEmail: 'jane@example.com',
    receiver_email: 'client@example.com',
    file_path: 'financial_statement_2023.pdf',
    status: 'approved' as const,
    created_at: '2023-10-10T14:20:00',
    updated_at: '2023-10-12T11:45:00',
    tracking_number: 'TRK78901234',
  },
  {
    id: '3',
    requester_id: 'user3',
    requesterName: 'Mike Johnson',
    requesterEmployeeId: 'EMP003',
    requesterCompany: 'Example Corp',
    requesterDepartment: 'HR',
    requesterDivision: 'Recruitment',
    document_name: 'New Employee Onboarding Pack',
    requesterEmail: 'mike@example.com',
    receiver_email: 'newemployee@example.com',
    file_path: 'onboarding_pack.pdf',
    status: 'rework' as const,
    created_at: '2023-10-05T10:15:00',
    updated_at: '2023-10-06T16:30:00',
    admin_feedback: 'Please update the company policy section.',
  },
  {
    id: '4',
    requester_id: 'user4',
    requesterName: 'Sarah Lee',
    requesterEmployeeId: 'EMP004',
    requesterCompany: 'Example Corp',
    requesterDepartment: 'Legal',
    requesterDivision: 'Compliance',
    document_name: 'Vendor Contract',
    requesterEmail: 'sarah@example.com',
    receiver_email: 'vendor@example.com',
    file_path: 'vendor_contract_2023.pdf',
    status: 'rejected' as const,
    created_at: '2023-10-02T08:45:00',
    updated_at: '2023-10-03T13:20:00',
    admin_feedback: 'Contract terms do not meet company guidelines.',
  },
  {
    id: '5',
    requester_id: 'user5',
    requesterName: 'David Brown',
    requesterEmployeeId: 'EMP005',
    requesterCompany: 'Example Corp',
    requesterDepartment: 'Sales',
    requesterDivision: 'Enterprise',
    document_name: 'Client Proposal',
    requesterEmail: 'david@example.com',
    receiver_email: 'client@example.com',
    file_path: 'client_proposal.pdf',
    status: 'completed' as const,
    created_at: '2023-09-28T15:30:00',
    updated_at: '2023-09-30T09:45:00',
    tracking_number: 'TRK45678901',
    is_delivered: true,
  },
];

// Normalize all mock data to ensure it has both naming conventions
export const mockRequests: FileRequest[] = baseMockRequests.map(request => normalizeFileRequest(request));
